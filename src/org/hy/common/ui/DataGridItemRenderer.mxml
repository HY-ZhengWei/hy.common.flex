<?xml version="1.0" encoding="utf-8"?>
<s:GridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
			        xmlns:s="library://ns.adobe.com/flex/spark" 
			        xmlns:mx="library://ns.adobe.com/flex/mx">
	
	<!-- ZhengWei(HY) Create 2015-08-19 二维表格的纯文本文字的单元格式组件 -->
	
	<!-- 下面是应用场景样例。注意 parentDocument.parentDocument 的用法。
         也可以用 @{outerDocument.xx}
	
	<fx:Script>
	
		public function f_SetTitle(i_Event:DataGridItemRendererEvent):void
		{
			...
		}
	
	</fx:Script>
	
	<s:DataGrid>
		<s:columns>
			<s:ArrayList>
				<s:GridColumn editable="false" headerText="参数名称">
					<s:itemRenderer>
						<fx:Component>
							<h:DataGridItemRenderer fontWeight="normal" change="parentDocument.parentDocument.f_SetTitle(event)" />
						</fx:Component>
					</s:itemRenderer>
				</s:GridColumn>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	
	-->
	
	<fx:Metadata>
		[Event(name="change" ,type="org.hy.common.ui.event.DataGridItemRendererEvent")]
	</fx:Metadata>
	
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import org.hy.common.Help;
			import org.hy.common.ui.event.DataGridItemRendererEvent;
			
			
			
			override public function set data(i_Value:Object):void
			{
				super.data = i_Value;
				
				// 默认情况下将用 data 为Labe赋值
				if ( super.data != null )
				{
					this.m_Value.text = super.data.toString();
				}
				
				this.dispatchEvent(new DataGridItemRendererEvent(this ,super.data ,super.column ,this.m_Value));
			}
			
			
			
			[Bindable]
			public function set fontWeight(i_Value:String):void
			{
				this.m_Value.setStyle("fontWeight" ,i_Value);
			}
			
			public function get fontWeight():String
			{
				return this.m_Value.getStyle("fontWeight");
			}
			
			
			
			[Bindable]
			public function set fontSize(i_Value:Number):void
			{
				this.m_Value.setStyle("fontSize" ,i_Value);
			}
			
			public function get fontSize():Number
			{
				return this.m_Value.getStyle("fontSize");
			}
			
			
			
			[Bindable]
			public function set fontStyle(i_Value:String):void
			{
				this.m_Value.setStyle("fontStyle" ,i_Value);
			}
			
			public function get fontStyle():String
			{
				return this.m_Value.getStyle("fontStyle");
			}
			
			
			
			[Bindable]
			public function set fontFamily(i_Value:String):void
			{
				this.m_Value.setStyle("fontFamily" ,i_Value);
			}
			
			public function get fontFamily():String
			{
				return this.m_Value.getStyle("fontFamily");
			}
			
			
			
			[Bindable]
			public function set verticalAlign(i_Value:String):void
			{
				this.m_Value.setStyle("verticalAlign" ,i_Value);
			}
			
			public function get verticalAlign():String
			{
				return this.m_Value.getStyle("verticalAlign");
			}
			
			
			
			[Bindable]
			public function set textAlign(i_Value:String):void
			{
				this.m_Value.setStyle("textAlign" ,i_Value);
			}
			
			public function get textAlign():String
			{
				return this.m_Value.getStyle("textAlign");
			}
			
		]]>
	</fx:Script>
	
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	
	<s:Label id="m_Value" 
			 width="100%" 
			 height="100%" 
			 textAlign="center" 
			 verticalAlign="middle" />
	
</s:GridItemRenderer>
